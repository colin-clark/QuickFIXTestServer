CREATE TABLE  CONFIGURABLE_PARAMETERS 
    ( 
     CONFIGURABLE_PARAMETERS_ID NUMBER (10)  NOT NULL , 
     APPLICATION_AREA VARCHAR2 (100 BYTE) , 
     PARAMETER_NAME VARCHAR2 (100 BYTE) , 
     PARAMETER_VALUE VARCHAR2 (100 BYTE) 
    )
/



ALTER TABLE  CONFIGURABLE_PARAMETERS 
    ADD CONSTRAINT PK_CONFIGURABLE_PARAMETERS PRIMARY KEY ( CONFIGURABLE_PARAMETERS_ID ) 
/


CREATE TABLE  DB_SCHEMA_VERSION 
    ( 
     SCHEMA_ID NUMBER  NOT NULL , 
     SCHEMA_VERSION NVARCHAR2 (10)  NOT NULL , 
     COMMENTS NVARCHAR2 (500) , 
     UPDATE_DATE NVARCHAR2 (200) , 
     UPDATED_BY VARCHAR2 (20 BYTE)  NOT NULL 
    ) 
/



ALTER TABLE  DB_SCHEMA_VERSION 
    ADD CONSTRAINT DB_SCHEMA_VERSION_PK PRIMARY KEY ( SCHEMA_ID ) 
/


CREATE TABLE  EVENT_FIELDS 
    ( 
     FIELD_TAG VARCHAR2 (255 BYTE) , 
     FIELD_NAME VARCHAR2 (100 BYTE) , 
     XML_NAME NVARCHAR2 (100) , 
     DISPLAY_NAME VARCHAR2 (100 BYTE) , 
     DATA_TYPE NVARCHAR2 (20) , 
     DESCRIPTION NVARCHAR2 (600) , 
     CLIENT_DATA_TYPE NVARCHAR2 (20) , 
     FIELD_ID NUMBER 
    ) 
          
          
/

CREATE INDEX EVENT_FIELDS_IDX1 ON EVENT_FIELDS (FIELD_ID)
/


CREATE TABLE  EXCEPTION_BLOCK 
    ( 
     EXCEPTION_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     EXCEPTION_TIMESTAMP NUMBER (19)  NOT NULL , 
     EXCEPTION_TYPE_ID NUMBER (10) , 
     EXEMPTION_TYPE_ID NUMBER (10) , 
     INSTR_ID CHAR (12 BYTE) , 
     EXCEPT_SEVERITY_ID NUMBER (10) , 
     EXCEPTION_DATETIME TIMESTAMP ,
     EXCEPTION_HASH VARCHAR2 (100 BYTE) NOT NULL
    ) 
          
          
/



ALTER TABLE  EXCEPTION_BLOCK 
    ADD CONSTRAINT PK_EXCEPTION_BLOCK PRIMARY KEY ( EXCEPTION_ID, EXCEPTION_TIMESTAMP ) 
/
    
ALTER TABLE  EXCEPTION_BLOCK 
    ADD CONSTRAINT UNIQUE_EXCEPTION_HASH UNIQUE ( EXCEPTION_HASH ) 
/

CREATE INDEX EXCEPTION_BLOCK_IDX1 ON EXCEPTION_BLOCK (EXCEPTION_ID, EXCEPTION_TYPE_ID, EXCEPTION_DATETIME)
/


CREATE TABLE  EXCEPTION_BLOCK_DATA 
    ( 
     EXCEPTION_ID VARCHAR2 (20 BYTE) , 
     EXCEPTION_TIMESTAMP NUMBER (19) , 
     DATA_VALUE VARCHAR2 (255 BYTE) , 
     COLUMN_SEQUENCE_NUMBER NUMBER (10) , 
     EXCEPTION_TYPE_SCHEMA_ID NUMBER 
    ) 
          
          
/

CREATE INDEX EXCEPTION_BLOCK_DATA_IDX1 ON EXCEPTION_BLOCK_DATA (EXCEPTION_ID, EXCEPTION_TYPE_SCHEMA_ID)
/


CREATE TABLE  EXCEPTION_DATA_TYPE 
    ( 
     EXCEPT_DATA_TYPE_ID NUMBER (10)  NOT NULL , 
     EXCEPT_DATA_TYPE_DESCRIPTION VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  EXCEPTION_DATA_TYPE 
    ADD CONSTRAINT PK_EXCEPTION_DATA_TYPE PRIMARY KEY ( EXCEPT_DATA_TYPE_ID ) 
/


CREATE TABLE  EXCEPTION_EVENT_FIELDS 
    ( 
     EVENT_ID NUMBER  NOT NULL , 
     FIELD_ID NUMBER  NOT NULL , 
     COLUMN_SEQUENCE NUMBER  NOT NULL 
    ) 
          
          
/

CREATE INDEX EXCEPTION_EVENT_FIELDS_IDX1 ON EXCEPTION_EVENT_FIELDS (EVENT_ID, FIELD_ID)
/



CREATE TABLE  EXCEPTION_EXEMPTION_XM 
    ( 
     EXCEPTION_ID NUMBER , 
     EXCEPTION_TIMESTAMP NUMBER , 
     EXEMPTION_TYPE_ID NUMBER 
    ) 
          
          
/

CREATE INDEX EXCEPTION_EXEMPTION_IDX1 ON EXCEPTION_EXEMPTION_XM (EXCEPTION_ID, EXEMPTION_TYPE_ID)
/


CREATE TABLE  EXCEPTION_REASON 
    ( 
     EXCEPTION_REASON_ID NUMBER (10)  NOT NULL , 
     EXCEPTION_REASON_DESCRIPTION VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  EXCEPTION_REASON 
    ADD CONSTRAINT PK_EXCEPTION_REASON PRIMARY KEY ( EXCEPTION_REASON_ID ) 
/


CREATE TABLE  EXCEPTION_REFERENCE_DATA 
    ( 
     EXCEPTION_REFERENCE_DATA_ID NUMBER (10)  NOT NULL , 
     EXCEPTION_ID VARCHAR2 (20 BYTE) , 
     EXCEPTION_TIMESTAMP NUMBER (19) , 
     REFERENCE_SOURCE_ID NUMBER (10) , 
     REF_DATA_STREAM_ID VARCHAR2 (20 BYTE) , 
     REF_DATA_STREAM_TIMESTAMP NUMBER (19) , 
     REF_MSG_TYPE_ID NUMBER (10) 
    ) 
          
          
/



ALTER TABLE  EXCEPTION_REFERENCE_DATA 
    ADD CONSTRAINT PK_EXCEPTION_REFERENCE_DATA PRIMARY KEY ( EXCEPTION_REFERENCE_DATA_ID ) 
/


CREATE TABLE  EXCEPTION_REPORT 
    ( 
     REPORT_ID NUMBER , 
     REPORT_NAME VARCHAR2 (250 BYTE)  NOT NULL , 
     REPORT_DESCRIPTION VARCHAR2 (500 BYTE) , 
     REPORT_SOURCE_TYPE VARCHAR2 (100 BYTE) , 
     EXCEPTION_ID NUMBER , 
     ALL_EXCEPTION_TYPES NUMBER , 
     USER_ID NUMBER , 
     CREATED_DATE TIMESTAMP , 
     REPORT_DATA BLOB , 
     MODIFIED_DATE TIMESTAMP , 
     MODIFIED_BY NUMBER 
    ) 
    LOB ( REPORT_DATA ) STORE AS 
        ( 
        STORAGE ( 
            PCTINCREASE 0 
            MINEXTENTS 1 
            MAXEXTENTS UNLIMITED 
            FREELISTS 1 
            BUFFER_POOL DEFAULT 
        ) 
        CHUNK 8192 
        RETENTION 
        ENABLE STORAGE IN ROW
        NOCACHE   
    ) 
/




CREATE TABLE  EXCEPTION_REVIEW 
    ( 
     EXCEPTION_ID NUMBER , 
     EXCEPTION_TIMESTAMP NUMBER , 
     EXCEPTION_STATUS_TYPE VARCHAR2 (20 BYTE) , 
     EXCEPTION_REVIEW_ID NUMBER , 
     EXCEPTION_TYPE_ID NUMBER , 
     EXCEPTION_STATUS_DATE TIMESTAMP , 
     USER_ID NUMBER 
    ) 
          
          
/

CREATE INDEX EXCEPTION_REVIEW_IDX1 ON EXCEPTION_REVIEW (EXCEPTION_ID, EXCEPTION_STATUS_TYPE)
/


CREATE TABLE  EXCEPTION_REVIEW_COMMENT 
    ( 
     EXCEPTION_REVIEW_COMMENT_ID NUMBER , 
     EXCEPTION_REVIEW_ID NUMBER , 
     EXCEPTION_REVIEW_COMMENT VARCHAR2 (255 BYTE) , 
     USER_ID VARCHAR2 (20 BYTE) , 
     EXCEPTION_REVIEW_COMMENT_DATE TIMESTAMP 
    ) 
          
          
/




CREATE TABLE  EXCEPTION_REVIEW_RESEARCH 
    ( 
     EXCEPTION_REVIEW_RESEARCH_ID NUMBER , 
     EXCEPTION_REVIEW_ID NUMBER , 
     RESOURCE_TYPE VARCHAR2 (20 BYTE) , 
     DESCRIPTION VARCHAR2 (250 BYTE)  NOT NULL , 
     CREATED_BY VARCHAR2 (20 BYTE) , 
     CREATED_DATE TIMESTAMP , 
     RESOURCE_DATA BLOB 
    ) 
    LOB ( RESOURCE_DATA ) STORE AS 
        ( 
        STORAGE ( 
            PCTINCREASE 0 
            MINEXTENTS 1 
            MAXEXTENTS UNLIMITED 
            FREELISTS 1 
            BUFFER_POOL DEFAULT 
        ) 
        CHUNK 8192 
        RETENTION 
        ENABLE STORAGE IN ROW
        NOCACHE   
    ) 
/




CREATE TABLE  EXCEPTION_REVIEW_STATUS 
    ( 
     EXCEPTION_REVIEW_STATUS_ID NUMBER , 
     EXCEPTION_REVIEW_ID NUMBER , 
     EXCEPTION_REVIEW_STATE VARCHAR2 (20 BYTE) , 
     CREATED_BY VARCHAR2 (20 BYTE) , 
     CREATED_DATE TIMESTAMP , 
     EXCEPTION_STATUS_TYPE NUMBER 
    ) 
          
          
/




CREATE TABLE  EXCEPTION_SEVERITY 
    ( 
     EXCEPT_SEVERITY_ID NUMBER (10)  NOT NULL , 
     EXCEPT_SEVERITY_DESCRIPTION VARCHAR2 (20 BYTE) 
    ) 
          
          
/



ALTER TABLE  EXCEPTION_SEVERITY 
    ADD CONSTRAINT PK_EXCEPTION_SEVERITY PRIMARY KEY ( EXCEPT_SEVERITY_ID ) 
/


CREATE TABLE  EXCEPTION_STATUS 
    ( 
     EXCEPTION_STATUS_ID NUMBER (10)  NOT NULL , 
     EXCEPTION_STATUS_DESCRIPTION VARCHAR2 (255 BYTE) , 
     EXCEPTION_STATUS_NAME VARCHAR2 (30 BYTE)  NOT NULL 
    ) 
          
          
/




CREATE TABLE  EXCEPTION_TYPES 
    ( 
     EXCEPTION_TYPE_ID NUMBER (10)  NOT NULL , 
     EXCEPTION_TYPE_DESCRIPTION VARCHAR2 (500 BYTE)  NOT NULL , 
     EXCEPTION_TYPE_TAG VARCHAR2 (100 BYTE) , 
     EXCEPTION_TYPE_NAME VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  EXCEPTION_TYPES 
    ADD CONSTRAINT PK_EXCEPTION_TYPES PRIMARY KEY ( EXCEPTION_TYPE_ID ) 
/


CREATE TABLE  EXCEPTION_TYPE_EXEMPTIONS 
    ( 
     EXCEPTION_TYPE_ID NUMBER (10)  NOT NULL , 
     EXEMPTION_TYPE_ID NUMBER (10)  NOT NULL 
    ) 
          
          
/



ALTER TABLE  EXCEPTION_TYPE_EXEMPTIONS 
    ADD CONSTRAINT PK_EXCEPTION_TYPE_EXEMPTIONS PRIMARY KEY ( EXCEPTION_TYPE_ID, EXEMPTION_TYPE_ID ) 
/


CREATE TABLE  EXCEPTION_TYPE_SCHEMA 
    ( 
     EXCEPTION_TYPE_SCHEMA_ID NUMBER (10)  NOT NULL , 
     EXCEPTION_TYPE_ID NUMBER (10)  NOT NULL , 
     COLUMN_NAME VARCHAR2 (50 BYTE)  NOT NULL , 
     COLUMN_SEQUENCE_NUMBER NUMBER (10) , 
     EXCEPTION_DATA_TYPE_ID NUMBER (1)  NOT NULL , 
     DESCRIPTION VARCHAR2 (256 BYTE) 
    ) 
          
          
/




CREATE TABLE  EXCEPTION_WRKFLW_AUDIT_TRAIL 
    ( 
     EXCEPT_WRKFLW_AUDIT_TRAIL_ID NUMBER (10)  NOT NULL , 
     EXCEPTION_ID VARCHAR2 (20 BYTE) , 
     EXCEPTION_TIMESTAMP NUMBER (19) , 
     EXCEPTION_STATUS_ID NUMBER (10) , 
     EXCEPTION_REASON_ID NUMBER (10) , 
     EXCEPTION_COMMENT NVARCHAR2 (2000) , 
     USER_ID NUMBER (10) , 
     EXCEPT_WRKFLW_AUDIT_TRAIL_TM NUMBER (19) 
    ) 
          
          
/



ALTER TABLE  EXCEPTION_WRKFLW_AUDIT_TRAIL 
    ADD CONSTRAINT PK_EXCEPT_WRKFLW_AUDIT_TRAIL PRIMARY KEY ( EXCEPT_WRKFLW_AUDIT_TRAIL_ID ) 
/


CREATE TABLE  EXCEPT_TYPE_EXCEPT_REASON 
    ( 
     EXCEPTION_TYPE_ID NUMBER (10)  NOT NULL , 
     EXCEPTION_REASON_ID NUMBER (10)  NOT NULL 
    ) 
          
          
/



ALTER TABLE  EXCEPT_TYPE_EXCEPT_REASON 
    ADD CONSTRAINT PK_EXCEPT_TYPE_EXCEPT_REASON PRIMARY KEY ( EXCEPTION_TYPE_ID, EXCEPTION_REASON_ID ) 
/


CREATE TABLE  EXEMPTIONS 
    ( 
     EXEMPTION_TYPE_ID NUMBER (10)  NOT NULL , 
     EXEMPTION_TYPE_DESCRIPTION VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  EXEMPTIONS 
    ADD CONSTRAINT PK_EXEMPTIONS PRIMARY KEY ( EXEMPTION_TYPE_ID ) 
/


CREATE TABLE  FUNCTIONS 
    ( 
     FUNCTION_ID NUMBER  NOT NULL , 
     DISPLAY_NAME CHAR (25 BYTE)  NOT NULL , 
     DESCRIPTION VARCHAR2 (50 BYTE) , 
     UPDATE_USER NUMBER , 
     UPDATE_TIME NUMBER (19) , 
     DELETED NUMBER 
    ) 
          
          
/



ALTER TABLE  FUNCTIONS 
    ADD CONSTRAINT FUNCTIONS_PK PRIMARY KEY ( FUNCTION_ID ) 
/

ALTER TABLE  FUNCTIONS 
    ADD CONSTRAINT FUNCTIONS_CON UNIQUE ( DISPLAY_NAME ) 
/


CREATE TABLE  HTMLDB_PLAN_TABLE 
    ( 
     STATEMENT_ID VARCHAR2 (30 BYTE) , 
     PLAN_ID NUMBER , 
     TIMESTAMP DATE , 
     REMARKS VARCHAR2 (4000 BYTE) , 
     OPERATION VARCHAR2 (30 BYTE) , 
     OPTIONS VARCHAR2 (255 BYTE) , 
     OBJECT_NODE VARCHAR2 (128 BYTE) , 
     OBJECT_OWNER VARCHAR2 (30 BYTE) , 
     OBJECT_NAME VARCHAR2 (30 BYTE) , 
     OBJECT_ALIAS VARCHAR2 (65 BYTE) , 
     OBJECT_INSTANCE NUMBER , 
     OBJECT_TYPE VARCHAR2 (30 BYTE) , 
     OPTIMIZER VARCHAR2 (255 BYTE) , 
     SEARCH_COLUMNS NUMBER , 
     ID NUMBER , 
     PARENT_ID NUMBER , 
     DEPTH NUMBER , 
     POSITION NUMBER , 
     COST NUMBER , 
     CARDINALITY NUMBER , 
     BYTES NUMBER , 
     OTHER_TAG VARCHAR2 (255 BYTE) , 
     PARTITION_START VARCHAR2 (255 BYTE) , 
     PARTITION_STOP VARCHAR2 (255 BYTE) , 
     PARTITION_ID NUMBER , 
     OTHER LONG , 
     DISTRIBUTION VARCHAR2 (30 BYTE) , 
     CPU_COST NUMBER , 
     IO_COST NUMBER , 
     TEMP_SPACE NUMBER , 
     ACCESS_PREDICATES VARCHAR2 (4000 BYTE) , 
     FILTER_PREDICATES VARCHAR2 (4000 BYTE) , 
     PROJECTION VARCHAR2 (4000 BYTE) , 
     TIME NUMBER , 
     QBLOCK_NAME VARCHAR2 (30 BYTE) 
    ) 
          
          
/




CREATE TABLE  INSTRUMENT 
    ( 
     DELETED NUMBER (1) , 
     DELISTED NUMBER (1) , 
     INSTR_ID CHAR (12 BYTE)  NOT NULL , 
     INSTR_CUSIP_NUM CHAR (9 BYTE) , 
     MKT_CNTR_CD CHAR (1 BYTE) , 
     WI_IND CHAR (1 BYTE) , 
     EFF_DT_TM NUMBER (19) , 
     END_DT_TM NUMBER (19) , 
     USER_ID NUMBER (10) 
    ) 
          
          
/



ALTER TABLE  INSTRUMENT 
    ADD CONSTRAINT PK_INSTRUMENT PRIMARY KEY ( INSTR_ID ) 
/


CREATE TABLE  INSTRUMENT_AUDIT_TRAIL 
    ( 
     DELETED NUMBER (1) , 
     DELISTED NUMBER (1) , 
     INSTR_AUDIT_ID NUMBER (10)  NOT NULL , 
     INSTR_ID CHAR (12 BYTE) , 
     INSTR_CUSIP_NUM CHAR (9 BYTE) , 
     MKT_CNTR_CD CHAR (1 BYTE) , 
     WI_IND CHAR (1 BYTE) , 
     EFF_DT_TM NUMBER (19) , 
     END_DT_TM NUMBER (19) , 
     USER_ID NUMBER (10) 
    ) 
          
          
/



ALTER TABLE  INSTRUMENT_AUDIT_TRAIL 
    ADD CONSTRAINT PK_INSTRUMENT_AUDIT_TRAIL PRIMARY KEY ( INSTR_AUDIT_ID ) 
/


CREATE TABLE  KS_SECURITY_USER 
    ( 
     USER_NAME VARCHAR2 (30 BYTE) , 
     USER_PWD VARCHAR2 (150 BYTE) , 
     USER_ID NUMBER , 
     CREATE_DATE TIMESTAMP , 
     LAST_LOGIN TIMESTAMP 
    ) 
          
          
/




CREATE TABLE  LAST_CONSOLIDATED 
    ( 
     EXCEPTION_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     EXCEPTION_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_SEQ_NUM NUMBER (9) , 
     QUOTE_TIMESTAMP NUMBER (19) , 
     SYMBOL VARCHAR2 (11 BYTE) , 
     PART_ID VARCHAR2 (1 BYTE) , 
     PRICE NUMBER (15,2) , 
     HLD_TRADE_IND NUMBER (1) , 
     SALES_CONDITION_ID NUMBER (1) 
    ) 
          
          
/



ALTER TABLE  LAST_CONSOLIDATED 
    ADD CONSTRAINT LAST_CONSOLIDATED_PK PRIMARY KEY ( EXCEPTION_ID, EXCEPTION_TIMESTAMP ) 
/


CREATE TABLE  NBBO 
    ( 
     EXCEPTION_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     EXCEPTION_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_SEQ_NUM NUMBER (9) , 
     QUOTE_TIMESTAMP NUMBER (19) , 
     SYMBOL VARCHAR2 (11 BYTE) , 
     BB_PART_ID VARCHAR2 (1 BYTE) , 
     BB_MSG_SEQ_NUM NUMBER (9) , 
     BB_TIMESTAMP NUMBER (19) , 
     BID_PRICE NUMBER (15,2) , 
     BID_SIZE NUMBER (7) , 
     BO_PART_ID VARCHAR2 (1 BYTE) , 
     BO_MSG_SEQ_NUM NUMBER (9) , 
     BO_TIMESTAMP NUMBER (19) , 
     ASK_PRICE NUMBER (15,2) , 
     ASK_SIZE NUMBER (7) , 
     QUOTE_CONDITION VARCHAR2 (1 BYTE) , 
     LOCKED_CROSSED NUMBER (1) 
    ) 
          
          
/



ALTER TABLE  NBBO 
    ADD CONSTRAINT NBBO_PK PRIMARY KEY ( EXCEPTION_ID, EXCEPTION_TIMESTAMP ) 
/


CREATE TABLE  REFERENCE_MSG_TYPES 
    ( 
     REF_MSG_TYPE_ID NUMBER (10)  NOT NULL , 
     REF_MSG_TYPE_DESCRIPTION VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  REFERENCE_MSG_TYPES 
    ADD CONSTRAINT PK_REFERENCE_MSG_TYPES PRIMARY KEY ( REF_MSG_TYPE_ID ) 
/


CREATE TABLE  REFERENCE_SOURCES 
    ( 
     REFERENCE_SOURCE_ID NUMBER (10)  NOT NULL , 
     REFERENCE_SOURCE_DESCRIPTION VARCHAR2 (30 BYTE) , 
     SYMBOLIC_NAME VARCHAR2 (30 BYTE) 
    ) 
          
          
/



ALTER TABLE  REFERENCE_SOURCES 
    ADD CONSTRAINT PK_REFERENCE_SOURCES PRIMARY KEY ( REFERENCE_SOURCE_ID ) 
/


CREATE TABLE  ROLES_FUNCTIONS 
    ( 
     ROLES_FUNCTIONS_ID NUMBER  NOT NULL , 
     ROLE_ID NUMBER  NOT NULL , 
     FUNCTION_ID NUMBER  NOT NULL , 
     DELETED NUMBER 
    ) 
          
          
/



ALTER TABLE  ROLES_FUNCTIONS 
    ADD CONSTRAINT ROLES_FUNCTIONS_PK PRIMARY KEY ( ROLES_FUNCTIONS_ID ) 
/


CREATE TABLE  SIAC_CNCL_CORRECT_IND 
    ( 
     CNCL_CORR_IND VARCHAR2 (1 BYTE)  NOT NULL , 
     CNCL_CORR_IND_DESC VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_CNCL_CORRECT_IND 
    ADD CONSTRAINT PK_SIAC_CNCL_CORRECT_IND PRIMARY KEY ( CNCL_CORR_IND ) 
/


CREATE TABLE  SIAC_CONS_HIGH_LOW_LAST_PRICE 
    ( 
     CONS_HGH_LOW_LST_PRC_IND VARCHAR2 (1 BYTE)  NOT NULL , 
     CONS_HGH_LOW_LST_PRC_IND_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_CONS_HIGH_LOW_LAST_PRICE 
    ADD CONSTRAINT PK_SIAC_CONS_HGH_LOW_LST_PRICE PRIMARY KEY ( CONS_HGH_LOW_LST_PRC_IND ) 
/


CREATE TABLE  SIAC_CQS 
    ( 
     DATA_STREAM_ID VARCHAR2 (20 BYTE) , 
     DATA_STREAM_TIMESTAMP TIMESTAMP , 
     MSG_CATEGORY CHAR (1 BYTE) , 
     MSG_TYPE CHAR (1 BYTE) , 
     MSG_NETWORK CHAR (1 BYTE) , 
     RETRANS_RQT VARCHAR2 (2 BYTE) , 
     HDR_INDENTIFIER VARCHAR2 (1 BYTE) , 
     MSG_SEQ_NUM NUMBER (9) , 
     PARTICIPANT_ID CHAR (1 BYTE) , 
     QUOTE_TIMESTAMP TIMESTAMP , 
     SEC_SYMBOL CHAR (11 BYTE) , 
     TEMP_SUFFIX CHAR (1 BYTE) , 
     TEST_MSG_IND VARCHAR2 (1 BYTE) , 
     FINANCIAL_STAT NUMBER (1) , 
     CURR_IND CHAR (3 BYTE) , 
     INSTR_TYPE VARCHAR2 (1 BYTE) , 
     CNCL_CORR_IND VARCHAR2 (1 BYTE) , 
     SETT_COND VARCHAR2 (1 BYTE) , 
     QTE_MKT_COND VARCHAR2 (1 BYTE) , 
     QTE_COND VARCHAR2 (1 BYTE) , 
     BID_PRICE NUMBER (15,2) , 
     BID_SIZE NUMBER (7) , 
     OFFER_PRICE NUMBER (15,2) , 
     OFFER_SIZE NUMBER (7) , 
     NASD_MKT_MAKER_ID VARCHAR2 (4 BYTE) , 
     NASD_MKT_MAKER_GEO_LOC VARCHAR2 (2 BYTE) , 
     NASD_MKT_MAKER_DSK_LOC VARCHAR2 (1 BYTE) , 
     NAT_BBO_IND NUMBER (1) , 
     NASD_BBO_IND NUMBER (1) , 
     BBID_PART_ID CHAR (1 BYTE) , 
     BBID_PRICE NUMBER (15,2) , 
     BBID_SIZE NUMBER (7) , 
     BBID_NASD_MKT_MKR_ID VARCHAR2 (4 BYTE) , 
     BBID_NASD_MKT_MKR_GEO_LOC VARCHAR2 (2 BYTE) , 
     BBID_NASD_MKT_MKR_DSK_LOC VARCHAR2 (1 BYTE) , 
     BOFFER_PART_ID CHAR (1 BYTE) , 
     BOFFER_PRICE NUMBER (15,2) , 
     BOFFER_SIZE NUMBER (7) , 
     BOFFER_NASD_MKT_MKR_ID VARCHAR2 (4 BYTE) , 
     BOFFER_NASD_MKT_MKR_GEO_LOC VARCHAR2 (2 BYTE) , 
     BOFFER_NASD_MKT_MKR_DSK_LOC VARCHAR2 (1 BYTE) , 
     RAW_TIMESTAMP VARCHAR2 (10 BYTE) , 
     OFFRAMP_NAME VARCHAR2 (20 BYTE) , 
     PLM_PART_ID CHAR (10 BYTE) 
    ) 
          
          
/




CREATE TABLE  SIAC_CQS_EXCEPTION 
    ( 
     DATA_STREAM_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_STREAM_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_CATEGORY CHAR (1 BYTE) , 
     MSG_TYPE CHAR (1 BYTE) , 
     MSG_NETWORK CHAR (1 BYTE) , 
     RETRANS_RQT VARCHAR2 (2 BYTE) , 
     HDR_INDENTIFIER VARCHAR2 (1 BYTE) , 
     MSG_SEQ_NUM NUMBER (9) , 
     PARTICIPANT_ID CHAR (1 BYTE) , 
     QUOTE_TIMESTAMP NUMBER (19) , 
     SEC_SYMBOL CHAR (11 BYTE) , 
     TEMP_SUFFIX CHAR (1 BYTE) , 
     TEST_MSG_IND VARCHAR2 (1 BYTE) , 
     FINANCIAL_STAT NUMBER (1) , 
     CURR_IND CHAR (3 BYTE) , 
     INSTR_TYPE VARCHAR2 (1 BYTE) , 
     CNCL_CORR_IND VARCHAR2 (1 BYTE) , 
     SETT_COND VARCHAR2 (1 BYTE) , 
     QTE_MKT_COND VARCHAR2 (1 BYTE) , 
     QTE_COND VARCHAR2 (1 BYTE) , 
     BID_PRICE NUMBER (15,2) , 
     BID_SIZE NUMBER (7) , 
     OFFER_PRICE NUMBER (15,2) , 
     OFFER_SIZE NUMBER (7) , 
     NASD_MKT_MAKER_ID VARCHAR2 (4 BYTE) , 
     NASD_MKT_MAKER_GEO_LOC VARCHAR2 (2 BYTE) , 
     NASD_MKT_MAKER_DSK_LOC VARCHAR2 (1 BYTE) , 
     NAT_BBO_IND NUMBER (1) , 
     NASD_BBO_IND NUMBER (1) , 
     BBID_PART_ID CHAR (1 BYTE) , 
     BBID_PRICE NUMBER (15,2) , 
     BBID_SIZE NUMBER (7) , 
     BBID_NASD_MKT_MKR_ID VARCHAR2 (4 BYTE) , 
     BBID_NASD_MKT_MKR_GEO_LOC VARCHAR2 (2 BYTE) , 
     BBID_NASD_MKT_MKR_DSK_LOC VARCHAR2 (1 BYTE) , 
     BOFFER_PART_ID CHAR (1 BYTE) , 
     BOFFER_PRICE NUMBER (15,2) , 
     BOFFER_SIZE NUMBER (7) , 
     BOFFER_NASD_MKT_MKR_ID VARCHAR2 (4 BYTE) , 
     BOFFER_NASD_MKT_MKR_GEO_LOC VARCHAR2 (2 BYTE) , 
     BOFFER_NASD_MKT_MKR_DSK_LOC VARCHAR2 (1 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_CQS_EXCEPTION 
    ADD CONSTRAINT PK_SIAC_CQS_EXEPT PRIMARY KEY ( DATA_STREAM_ID, DATA_STREAM_TIMESTAMP ) 
/


CREATE TABLE  SIAC_CTS 
    ( 
     DATA_STREAM_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_STREAM_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_CATEGORY CHAR (1 BYTE) , 
     MSG_TYPE CHAR (1 BYTE) , 
     MSG_NETWORK CHAR (1 BYTE) , 
     RETRANS_RQT VARCHAR2 (2 BYTE) , 
     HDR_INDENTIFIER VARCHAR2 (1 BYTE) , 
     MSG_SEQ_NUM NUMBER (9) , 
     PARTICIPANT_ID CHAR (1 BYTE) , 
     TRADE_TIMESTAMP NUMBER (19) , 
     SEC_SYMBOL CHAR (11 BYTE) , 
     TEMP_SUFFIX CHAR (1 BYTE) , 
     TEST_MSG_IND VARCHAR2 (1 BYTE) , 
     FINANCIAL_STAT NUMBER (1) , 
     CURR_IND CHAR (3 BYTE) , 
     HELD_TRD_IND VARCHAR2 (1 BYTE) , 
     INSTR_TYPE VARCHAR2 (1 BYTE) , 
     SELL_SALE_DAYS NUMBER (3) , 
     SALE_COND VARCHAR2 (4 BYTE) , 
     TRD_PRICE NUMBER (15,2) , 
     TRD_SIZE NUMBER (9) , 
     CONS_HGH_LOW_LST_PRC_IND VARCHAR2 (1 BYTE) , 
     PART_OPN_HGH_LOW_LST_PRC_IND CHAR (1 BYTE) , 
     STP_STCK_IND NUMBER (1) 
    ) 
          
          
/



ALTER TABLE  SIAC_CTS 
    ADD CONSTRAINT PK_SIAC_CTS PRIMARY KEY ( DATA_STREAM_ID, DATA_STREAM_TIMESTAMP ) 
/


CREATE TABLE  SIAC_CTS_CANCEL 
    ( 
     DATA_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_SEQ_NUM NUMBER (9) , 
     MSG_TIMESTAMP NUMBER (19) , 
     PART_ID VARCHAR2 (1 BYTE) , 
     ADJ_SEQ_NUM NUMBER (9) , 
     SYMBOL VARCHAR2 (11 BYTE) , 
     SUFFIX VARCHAR2 (1 BYTE) , 
     FIN_STATUS VARCHAR2 (1 BYTE) , 
     CURRENCY VARCHAR2 (3 BYTE) , 
     INSTR_TYPE VARCHAR2 (1 BYTE) , 
     CANC_ERR_ACT VARCHAR2 (1 BYTE) , 
     SELL_SALE_DAYS VARCHAR2 (3 BYTE) , 
     SALE_COND VARCHAR2 (4 BYTE) , 
     TRADE_PRICE NUMBER (15,2) , 
     TRADE_VOL NUMBER (9) , 
     STOP_STOCK_IND VARCHAR2 (1 BYTE) , 
     CONSOL_LAST_PART_ID VARCHAR2 (1 BYTE) , 
     CONSOL_LAST_PRICE NUMBER (15,2) , 
     CONSOL_PREV_CLOSE_PRICE_DATE VARCHAR2 (6 BYTE) , 
     CONSOL_HIGH_PRICE NUMBER (15,2) , 
     CONSOL_LOW_PRICE NUMBER (15,2) , 
     CONSOL_TOT_VOL NUMBER (11) , 
     PART_LAST_PRICE NUMBER (15,2) , 
     PART_PREV_CLOSE_PRICE_DATE VARCHAR2 (6 BYTE) , 
     PART_TOT_VOL NUMBER (11) , 
     PART_TICK VARCHAR2 (1 BYTE) , 
     PART_OPEN_PRICE NUMBER (15,2) , 
     PART_HIGH_PRICE NUMBER (15,2) , 
     PART_LOW_PRICE NUMBER (15,2) 
    ) 
          
          
/



ALTER TABLE  SIAC_CTS_CANCEL 
    ADD CONSTRAINT SIAC_CTS_CANCEL_PK PRIMARY KEY ( DATA_ID, DATA_TIMESTAMP ) 
/


CREATE TABLE  SIAC_CTS_CORRECTION 
    ( 
     DATA_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_SEQ_NUM NUMBER (9) , 
     MSG_TIMESTAMP NUMBER (19) , 
     PART_ID VARCHAR2 (1 BYTE) , 
     ADJ_SEQ_NUM NUMBER (9) , 
     SYMBOL VARCHAR2 (11 BYTE) , 
     SUFFIX VARCHAR2 (1 BYTE) , 
     FIN_STATUS VARCHAR2 (1 BYTE) , 
     CURRENCY VARCHAR2 (3 BYTE) , 
     INSTR_TYPE VARCHAR2 (1 BYTE) , 
     SELL_SALE_DAYS VARCHAR2 (3 BYTE) , 
     SALE_COND VARCHAR2 (4 BYTE) , 
     TRADE_PRICE NUMBER (15,2) , 
     TRADE_VOL NUMBER (9) , 
     STOP_STOCK_IND VARCHAR2 (1 BYTE) , 
     CORRECTED_SELL_SALE_DAYS VARCHAR2 (3 BYTE) , 
     CORRECTED_SALE_COND VARCHAR2 (4 BYTE) , 
     CORRECTED_TRADE_PRICE NUMBER (15,2) , 
     CORECTED_TRADE_VOL NUMBER (9) , 
     CORRECTED_STOP_STOCK_IND VARCHAR2 (1 BYTE) , 
     CONSOL_LAST_PART_ID VARCHAR2 (1 BYTE) , 
     CONSOL_LAST_PRICE NUMBER (15,2) , 
     CONSOL_PREV_CLOSE_PRICE_DATE VARCHAR2 (6 BYTE) , 
     CONSOL_HIGH_PRICE NUMBER (15,2) , 
     CONSOL_LOW_PRICE NUMBER (15,2) , 
     CONSOL_TOT_VOL NUMBER (11) , 
     PART_LAST_PRICE NUMBER (15,2) , 
     PART_PREV_CLOSE_PRICE_DATE VARCHAR2 (6 BYTE) , 
     PART_TOT_VOL NUMBER (11) , 
     PART_TICK VARCHAR2 (1 BYTE) , 
     PART_OPEN_PRICE NUMBER (15,2) , 
     PART_HIGH_PRICE NUMBER (15,2) , 
     PART_LOW_PRICE NUMBER (15,2) 
    ) 
          
          
/



ALTER TABLE  SIAC_CTS_CORRECTION 
    ADD CONSTRAINT SIAC_CTS_CORRECTION_PK PRIMARY KEY ( DATA_ID, DATA_TIMESTAMP ) 
/


CREATE TABLE  SIAC_CTS_EXCEPTION 
    ( 
     DATA_STREAM_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_STREAM_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_CATEGORY CHAR (1 BYTE) , 
     MSG_TYPE CHAR (1 BYTE) , 
     MSG_NETWORK CHAR (1 BYTE) , 
     RETRANS_RQT VARCHAR2 (2 BYTE) , 
     HDR_INDENTIFIER VARCHAR2 (1 BYTE) , 
     MSG_SEQ_NUM NUMBER (9) , 
     PARTICIPANT_ID CHAR (1 BYTE) , 
     TRADE_TIMESTAMP NUMBER (19) , 
     SEC_SYMBOL CHAR (11 BYTE) , 
     TEMP_SUFFIX CHAR (1 BYTE) , 
     TEST_MSG_IND VARCHAR2 (1 BYTE) , 
     FINANCIAL_STAT NUMBER (1) , 
     CURR_IND CHAR (3 BYTE) , 
     HELD_TRD_IND VARCHAR2 (1 BYTE) , 
     INSTR_TYPE VARCHAR2 (1 BYTE) , 
     SELL_SALE_DAYS NUMBER (3) , 
     SALE_COND VARCHAR2 (4 BYTE) , 
     TRD_PRICE NUMBER (15,2) , 
     TRD_SIZE NUMBER (9) , 
     CONS_HGH_LOW_LST_PRC_IND VARCHAR2 (1 BYTE) , 
     PART_OPN_HGH_LOW_LST_PRC_IND CHAR (1 BYTE) , 
     STP_STCK_IND NUMBER (1) 
    ) 
          
          
/



ALTER TABLE  SIAC_CTS_EXCEPTION 
    ADD CONSTRAINT PK_SIAC_CTS_EXEPT PRIMARY KEY ( DATA_STREAM_ID, DATA_STREAM_TIMESTAMP ) 
/


CREATE TABLE  SIAC_FINANCIAL_STATUS 
    ( 
     FINANCIAL_STAT NUMBER (1)  NOT NULL , 
     FINANCIAL_STAT_DESC VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_FINANCIAL_STATUS 
    ADD CONSTRAINT PK_SIAC_FINANCIAL_STATUS PRIMARY KEY ( FINANCIAL_STAT ) 
/


CREATE TABLE  SIAC_MESSAGE_CATEGORY 
    ( 
     MSG_CATEGORY CHAR (1 BYTE)  NOT NULL , 
     MSG_CATEGORY_DESC VARCHAR2 (25 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_MESSAGE_CATEGORY 
    ADD CONSTRAINT PK_SIAC_MESSAGE_CATEGORY PRIMARY KEY ( MSG_CATEGORY ) 
/


CREATE TABLE  SIAC_MESSAGE_NETWORK 
    ( 
     MSG_NETWORK CHAR (1 BYTE)  NOT NULL , 
     MSG_NETWORK_DESC VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_MESSAGE_NETWORK 
    ADD CONSTRAINT PK_SIAC_MESSAGE_NETWORK PRIMARY KEY ( MSG_NETWORK ) 
/


CREATE TABLE  SIAC_MESSAGE_TYPE 
    ( 
     MSG_CATEGORY CHAR (1 BYTE)  NOT NULL , 
     MSG_TYPE CHAR (1 BYTE)  NOT NULL , 
     MSG_TYPE_DESC VARCHAR2 (100 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_MESSAGE_TYPE 
    ADD CONSTRAINT PK_SIAC_MESSAGE_TYPE PRIMARY KEY ( MSG_CATEGORY, MSG_TYPE ) 
/


CREATE TABLE  SIAC_NASD_BBO 
    ( 
     NASD_BBO_IND NUMBER (1)  NOT NULL , 
     NASD_BBO_IND_DESC VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_NASD_BBO 
    ADD CONSTRAINT PK_SIAC_NASD_BBO PRIMARY KEY ( NASD_BBO_IND ) 
/


CREATE TABLE  SIAC_NATIONAL_BBO 
    ( 
     NAT_BBO_IND NUMBER (1)  NOT NULL , 
     NAT_BBO_DESC VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_NATIONAL_BBO 
    ADD CONSTRAINT PK_SIAC_NATIONAL_BBOD PRIMARY KEY ( NAT_BBO_IND ) 
/


CREATE TABLE  SIAC_PARTICIPANT 
    ( 
     PARTICIPANT_ID CHAR (1 BYTE)  NOT NULL , 
     PARTICIPANT_ID_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_PARTICIPANT 
    ADD CONSTRAINT PK_SIAC_PARTICIPANT PRIMARY KEY ( PARTICIPANT_ID ) 
/


CREATE TABLE  SIAC_PART_OPN_HGH_LOW_LST_PRC 
    ( 
     PART_OPN_HGH_LOW_LST_PRC_IND CHAR (1 BYTE)  NOT NULL , 
     PART_OPN_HGH_LOW_LST_PRC_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_PART_OPN_HGH_LOW_LST_PRC 
    ADD CONSTRAINT PK_SIAC_PART_OPN_H_LW_LST_PRC PRIMARY KEY ( PART_OPN_HGH_LOW_LST_PRC_IND ) 
/


CREATE TABLE  SIAC_PRICE_DENOMINATOR 
    ( 
     PRC_DEN_IND VARCHAR2 (1 BYTE)  NOT NULL , 
     PRC_DEN_IND_VALUE NUMBER (10) 
    ) 
          
          
/



ALTER TABLE  SIAC_PRICE_DENOMINATOR 
    ADD CONSTRAINT PK_SIAC_PRICE_DENOMINATOR PRIMARY KEY ( PRC_DEN_IND ) 
/


CREATE TABLE  SIAC_QUOTE_CONDITION 
    ( 
     QTE_COND VARCHAR2 (1 BYTE)  NOT NULL , 
     QTE_COND_DESC VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_QUOTE_CONDITION 
    ADD CONSTRAINT PK_SIAC_QUOTE_CONDITION PRIMARY KEY ( QTE_COND ) 
/


CREATE TABLE  SIAC_QUOTE_MKT_COND 
    ( 
     QTE_MKT_COND VARCHAR2 (1 BYTE)  NOT NULL , 
     QTE_MKT_COND_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_QUOTE_MKT_COND 
    ADD CONSTRAINT PK_SIAC_QUOTE_MKT_COND PRIMARY KEY ( QTE_MKT_COND ) 
/


CREATE TABLE  SIAC_SALE_CONDITION 
    ( 
     SALE_COND VARCHAR2 (4 BYTE)  NOT NULL , 
     SALE_COND_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_SALE_CONDITION 
    ADD CONSTRAINT PK_SIAC_SALE_CONDITION PRIMARY KEY ( SALE_COND ) 
/


CREATE TABLE  SIAC_SETTLEMENT_CONDITION 
    ( 
     SETT_COND VARCHAR2 (1 BYTE)  NOT NULL , 
     SETT_COND_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_SETTLEMENT_CONDITION 
    ADD CONSTRAINT PK_SIAC_SETTLEMENT_CONDITION PRIMARY KEY ( SETT_COND ) 
/


CREATE TABLE  SIAC_STOP_STOCK 
    ( 
     STP_STCK_IND NUMBER (1)  NOT NULL , 
     STP_STCK_IND_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_STOP_STOCK 
    ADD CONSTRAINT PK_SIAC_STOP_STOCK PRIMARY KEY ( STP_STCK_IND ) 
/


CREATE TABLE  SIAC_TEMPORARY_SUFFIX 
    ( 
     TEMP_SUFFIX CHAR (1 BYTE)  NOT NULL , 
     TEMP_SUFFIX_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIAC_TEMPORARY_SUFFIX 
    ADD CONSTRAINT PK_SIAC_TEMPORARY_SUFFIX PRIMARY KEY ( TEMP_SUFFIX ) 
/


CREATE TABLE  SIP_MESSAGE_CATEGORY 
    ( 
     MSG_CATEGORY VARCHAR2 (1 BYTE)  NOT NULL , 
     MSG_CATEGORY_DESC VARCHAR2 (25 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_MESSAGE_CATEGORY 
    ADD CONSTRAINT PK_SIP_MESSAGE_CATEGORY PRIMARY KEY ( MSG_CATEGORY ) 
/


CREATE TABLE  SIP_MESSAGE_TYPE 
    ( 
     MSG_CATEGORY VARCHAR2 (1 BYTE)  NOT NULL , 
     MSG_TYPE VARCHAR2 (1 BYTE)  NOT NULL , 
     MSG_TYPE_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_MESSAGE_TYPE 
    ADD CONSTRAINT PK_SIP_MESSAGE_TYPE PRIMARY KEY ( MSG_CATEGORY, MSG_TYPE ) 
/


CREATE TABLE  SIP_NBID_TICK 
    ( 
     NBID_TICK_IND VARCHAR2 (1 BYTE)  NOT NULL , 
     NBID_TICK_IND_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_NBID_TICK 
    ADD CONSTRAINT PK_SIP_NBID_TICK PRIMARY KEY ( NBID_TICK_IND ) 
/


CREATE TABLE  SIP_PARTICIPANT 
    ( 
     PARTICIPANT_ID VARCHAR2 (1 BYTE)  NOT NULL , 
     PARTICIPANT_ID_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_PARTICIPANT 
    ADD CONSTRAINT PK_SIP_PARTICIPANT PRIMARY KEY ( PARTICIPANT_ID ) 
/


CREATE TABLE  SIP_PRICE_DENOMINATOR 
    ( 
     PRC_DEN_IND VARCHAR2 (1 BYTE)  NOT NULL , 
     PRC_DEN_IND_VALUE NUMBER (10) 
    ) 
          
          
/



ALTER TABLE  SIP_PRICE_DENOMINATOR 
    ADD CONSTRAINT PK_SIP_PRICE_DENOMINATOR PRIMARY KEY ( PRC_DEN_IND ) 
/


CREATE TABLE  SIP_QUOTE_CONDITION 
    ( 
     QTE_COND VARCHAR2 (1 BYTE)  NOT NULL , 
     QTE_COND_DESC VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_QUOTE_CONDITION 
    ADD CONSTRAINT PK_SIP_QUOTE_CONDITION PRIMARY KEY ( QTE_COND ) 
/


CREATE TABLE  SIP_SALE_CONDITION 
    ( 
     SALE_COND VARCHAR2 (4 BYTE)  NOT NULL , 
     SALE_COND_DESC VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_SALE_CONDITION 
    ADD CONSTRAINT PK_SIP_SALE_CONDITION PRIMARY KEY ( SALE_COND ) 
/


CREATE TABLE  SIP_SESSION_IDENTIFIER 
    ( 
     MSG_NETWORK VARCHAR2 (1 BYTE)  NOT NULL , 
     MSG_NETWORK_DESC VARCHAR2 (255 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_SESSION_IDENTIFIER 
    ADD CONSTRAINT PK_SIP_SESSION_IDENTIFIER PRIMARY KEY ( MSG_NETWORK ) 
/


CREATE TABLE  SIP_UQDF 
    ( 
     DATA_STREAM_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_STREAM_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_CATEGORY VARCHAR2 (1 BYTE) , 
     MSG_TYPE VARCHAR2 (1 BYTE) , 
     MSG_NETWORK VARCHAR2 (1 BYTE) , 
     RETRANS_RQT VARCHAR2 (2 BYTE) , 
     MSG_SEQ_NUM NUMBER (8) , 
     PARTICIPANT_ID VARCHAR2 (1 BYTE) , 
     QUOTE_TIMESTAMP NUMBER (19) , 
     SEC_SYMBOL VARCHAR2 (11 BYTE) , 
     QTE_COND VARCHAR2 (1 BYTE) , 
     BID_PRICE NUMBER (15,2) , 
     BID_SIZE NUMBER (7) , 
     OFFER_PRICE NUMBER (15,2) , 
     OFFER_SIZE NUMBER (7) , 
     QUOTE_CURRENCY VARCHAR2 (3 BYTE) , 
     NBBO_APP_IND VARCHAR2 (1 BYTE) , 
     NBBO_QTE_COND VARCHAR2 (1 BYTE) , 
     BBID_PART_ID VARCHAR2 (1 BYTE) , 
     BBID_PRICE NUMBER (15,2) , 
     BBID_SIZE VARCHAR2 (7 BYTE) , 
     NBID_TICK_IND VARCHAR2 (1 BYTE) , 
     BBID_NASD_MKT_MKR_DSK_LOC VARCHAR2 (1 BYTE) , 
     BOFFER_PART_ID VARCHAR2 (1 BYTE) , 
     BOFFER_PRICE NUMBER (15,2) , 
     NBBO_CURRENCY VARCHAR2 (3 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_UQDF 
    ADD CONSTRAINT PK_SIP_UQDF PRIMARY KEY ( DATA_STREAM_ID, DATA_STREAM_TIMESTAMP ) 
/


CREATE TABLE  SIP_UQDF_EXCEPTION 
    ( 
     DATA_STREAM_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_STREAM_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_CATEGORY VARCHAR2 (1 BYTE) , 
     MSG_TYPE VARCHAR2 (1 BYTE) , 
     MSG_NETWORK VARCHAR2 (1 BYTE) , 
     RETRANS_RQT VARCHAR2 (2 BYTE) , 
     MSG_SEQ_NUM NUMBER (8) , 
     PARTICIPANT_ID VARCHAR2 (1 BYTE) , 
     QUOTE_TIMESTAMP NUMBER (19) , 
     SEC_SYMBOL VARCHAR2 (11 BYTE) , 
     QTE_COND VARCHAR2 (1 BYTE) , 
     BID_PRICE NUMBER (15,2) , 
     BID_SIZE NUMBER (7) , 
     OFFER_PRICE NUMBER (15,2) , 
     OFFER_SIZE NUMBER (7) , 
     QUOTE_CURRENCY VARCHAR2 (3 BYTE) , 
     NBBO_APP_IND VARCHAR2 (1 BYTE) , 
     NBBO_QTE_COND VARCHAR2 (1 BYTE) , 
     BBID_PART_ID VARCHAR2 (1 BYTE) , 
     BBID_PRICE NUMBER (15,2) , 
     BBID_SIZE VARCHAR2 (7 BYTE) , 
     NBID_TICK_IND VARCHAR2 (1 BYTE) , 
     BBID_NASD_MKT_MKR_DSK_LOC VARCHAR2 (1 BYTE) , 
     BOFFER_PART_ID VARCHAR2 (1 BYTE) , 
     BOFFER_PRICE NUMBER (15,2) , 
     NBBO_CURRENCY VARCHAR2 (3 BYTE) 
    ) 
          
          
/



ALTER TABLE  SIP_UQDF_EXCEPTION 
    ADD CONSTRAINT PK_SIP_UQDF_EXEPT PRIMARY KEY ( DATA_STREAM_ID, DATA_STREAM_TIMESTAMP ) 
/


CREATE TABLE  SIP_UTDF 
    ( 
     DATA_STREAM_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_STREAM_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_CATEGORY VARCHAR2 (1 BYTE) , 
     MSG_TYPE VARCHAR2 (1 BYTE) , 
     MSG_NETWORK VARCHAR2 (1 BYTE) , 
     RETRANS_RQT VARCHAR2 (2 BYTE) , 
     MSG_SEQ_NUM NUMBER (8) , 
     PARTICIPANT_ID VARCHAR2 (1 BYTE) , 
     TRADE_TIMESTAMP NUMBER (19) , 
     SEC_SYMBOL VARCHAR2 (11 BYTE) , 
     SALE_COND VARCHAR2 (4 BYTE) , 
     SELL_SALE_DAYS NUMBER (2) , 
     TRD_PRICE NUMBER (15,2) , 
     TRD_CURR VARCHAR2 (3 BYTE) , 
     TRD_SIZE NUMBER (9) , 
     CONS_PRC_CHG_IND NUMBER (1) 
    ) 
          
          
/



ALTER TABLE  SIP_UTDF 
    ADD CONSTRAINT PK_SIP_UTDF PRIMARY KEY ( DATA_STREAM_ID, DATA_STREAM_TIMESTAMP ) 
/


CREATE TABLE  SIP_UTDF_CANCEL 
    ( 
     DATA_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_SEQ_NUM NUMBER (8) , 
     MSG_TIMESTAMP NUMBER (19) , 
     PART_ID VARCHAR2 (1 BYTE) , 
     ORIG_SEQ_NUM NUMBER (8) , 
     SYMBOL VARCHAR2 (11 BYTE) , 
     ORIG_FUNCTION VARCHAR2 (1 BYTE) , 
     ORIG_SALE_COND VARCHAR2 (1 BYTE) , 
     ORIG_SELL_SALE_DAYS VARCHAR2 (2 BYTE) , 
     ORIG_PRICE NUMBER (15,2) , 
     ORIG_CURRENCY VARCHAR2 (3 BYTE) , 
     ORIG_VOL NUMBER (9) , 
     CONSOL_HIGH_PRICE NUMBER (15,2) , 
     CONSOL_LOW_PRICE NUMBER (15,2) , 
     CONSOL_LAST_PRICE NUMBER (15,2) , 
     CONSOL_LAST_MARK_CTR VARCHAR2 (1 BYTE) , 
     CONSOL_CURRENCY VARCHAR2 (3 BYTE) , 
     CONSOL_VOL NUMBER (11) , 
     CONSOL_PRC_CHG_IND VARCHAR2 (1 BYTE) 
    ) 
          
          
/



COMMENT ON COLUMN  SIP_UTDF_CANCEL.PART_ID IS 'Participant ID' 
/

COMMENT ON COLUMN  SIP_UTDF_CANCEL.ORIG_SALE_COND IS 'Financial Status' 
/

ALTER TABLE  SIP_UTDF_CANCEL 
    ADD CONSTRAINT SIP_UTDF_CANCEL_PK PRIMARY KEY ( DATA_ID, DATA_TIMESTAMP ) 
/


CREATE TABLE  SIP_UTDF_CORRECTION 
    ( 
     DATA_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_SEQ_NUM NUMBER (8) , 
     MSG_TIMESTAMP NUMBER (19) , 
     PART_ID VARCHAR2 (1 BYTE) , 
     ORIG_SEQ_NUM NUMBER (8) , 
     SYMBOL VARCHAR2 (11 BYTE) , 
     ORIG_SALE_COND VARCHAR2 (1 BYTE) , 
     ORIG_SELL_SALE_DAYS VARCHAR2 (2 BYTE) , 
     ORIG_PRICE NUMBER (15,2) , 
     ORIG_CURRENCY VARCHAR2 (3 BYTE) , 
     ORIG_VOL NUMBER (9) , 
     CORRECTED_SALE_COND VARCHAR2 (1 BYTE) , 
     CORRECTED_SELL_SALE_DAYS VARCHAR2 (2 BYTE) , 
     CORRECTED_PRICE NUMBER (15,2) , 
     CORRECTED_CURRENCY VARCHAR2 (3 BYTE) , 
     CORRECTED_VOL NUMBER (9) , 
     CONSOL_HIGH_PRICE NUMBER (15,2) , 
     CONSOL_LOW_PRICE NUMBER (15,2) , 
     CONSOL_LAST_PRICE NUMBER (15,2) , 
     CONSOL_LAST_MARK_CTR VARCHAR2 (1 BYTE) , 
     CONSOL_CURRENCY VARCHAR2 (3 BYTE) , 
     CONSOL_VOL NUMBER (11) , 
     CONSOL_PRC_CHG_IND VARCHAR2 (1 BYTE) 
    ) 
          
          
/



COMMENT ON COLUMN  SIP_UTDF_CORRECTION.MSG_TIMESTAMP IS 'Julian Timestamp' 
/

COMMENT ON COLUMN  SIP_UTDF_CORRECTION.PART_ID IS 'Participant ID' 
/

COMMENT ON COLUMN  SIP_UTDF_CORRECTION.ORIG_SALE_COND IS 'Financial Status' 
/

ALTER TABLE  SIP_UTDF_CORRECTION 
    ADD CONSTRAINT SIP_UTDF_CORRECTION_PK PRIMARY KEY ( DATA_ID, DATA_TIMESTAMP ) 
/


CREATE TABLE  SIP_UTDF_EXCEPTION 
    ( 
     DATA_STREAM_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     DATA_STREAM_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_CATEGORY VARCHAR2 (1 BYTE) , 
     MSG_TYPE VARCHAR2 (1 BYTE) , 
     MSG_NETWORK VARCHAR2 (1 BYTE) , 
     RETRANS_RQT VARCHAR2 (2 BYTE) , 
     MSG_SEQ_NUM NUMBER (8) , 
     PARTICIPANT_ID VARCHAR2 (1 BYTE) , 
     TRADE_TIMESTAMP NUMBER (19) , 
     SEC_SYMBOL VARCHAR2 (11 BYTE) , 
     SALE_COND VARCHAR2 (4 BYTE) , 
     SELL_SALE_DAYS NUMBER (2) , 
     TRD_PRICE NUMBER (15,2) , 
     TRD_CURR VARCHAR2 (3 BYTE) , 
     TRD_SIZE NUMBER (9) , 
     CONS_PRC_CHG_IND NUMBER (1) 
    ) 
          
          
/



ALTER TABLE  SIP_UTDF_EXCEPTION 
    ADD CONSTRAINT PK_SIP_UTDF_EXEPT PRIMARY KEY ( DATA_STREAM_ID, DATA_STREAM_TIMESTAMP ) 
/


CREATE TABLE  STREAM_COLUMN_MAP 
    ( 
     STREAM_NAME VARCHAR2 (100 BYTE) , 
     COLUMN_NAME VARCHAR2 (100 BYTE) , 
     MAP_SQL VARCHAR2 (100 BYTE) , 
     BIND_VAR VARCHAR2 (100 BYTE) 
    ) 
          
          
/




CREATE TABLE  TESTFORSCRIPTS 
    ( 
     EMPNO NUMBER (4)  NOT NULL , 
     FIRST_NAME NVARCHAR2 (150) , 
     LAST_NAME NVARCHAR2 (100) , 
     EMAIL_ADDRESS NVARCHAR2 (50) , 
     PHONE_NUMBER NVARCHAR2 (40) , 
     CELL_PHONE_NUMBER NVARCHAR2 (40) 
    ) 
          
          
/




CREATE TABLE  TICK_CALCULATOR 
    ( 
     EXCEPTION_ID VARCHAR2 (20 BYTE)  NOT NULL , 
     EXCEPTION_TIMESTAMP NUMBER (19)  NOT NULL , 
     MSG_SEQ_NUM NUMBER (9) , 
     QUOTE_TIMESTAMP NUMBER (19) , 
     SYMBOL VARCHAR2 (11 BYTE) , 
     PART_ID VARCHAR2 (1 BYTE) , 
     PRICE NUMBER (15,2) , 
     TICK_IND_ID NUMBER (1) 
    ) 
          
          
/



ALTER TABLE  TICK_CALCULATOR 
    ADD CONSTRAINT TICK_CALCULATOR_PK PRIMARY KEY ( EXCEPTION_ID, EXCEPTION_TIMESTAMP ) 
/


CREATE TABLE  TICK_INDICATOR 
    ( 
     TICK_IND_ID NUMBER (1)  NOT NULL , 
     TICK_IND_DESC VARCHAR2 (100 BYTE) 
    ) 
          
          
/



ALTER TABLE  TICK_INDICATOR 
    ADD CONSTRAINT TICK_INDICATOR_PK PRIMARY KEY ( TICK_IND_ID ) 
/


CREATE TABLE  USER_ACTIVITY 
    ( 
     ACTIVITY_ID NUMBER , 
     ACTIVITY_NAME VARCHAR2 (250 BYTE)  NOT NULL , 
     ACTIVITY_DESCRIPTION VARCHAR2 (250 BYTE)  NOT NULL 
    ) 
          
          
/




CREATE TABLE  USER_ACTIVITY_HISTORY 
    ( 
     USER_ACTIVITY_ID NUMBER (10) , 
     UPDATE_DATETIME TIMESTAMP , 
     USER_ID NUMBER  NOT NULL , 
     ACTIVITY_SOURCE VARCHAR2 (500 BYTE)  NOT NULL , 
     ACTIVITY_DETAILS VARCHAR2 (4000)  NOT NULL , 
     ACTIVITY VARCHAR2 (500 BYTE)  NOT NULL 
    ) 
          
          
/




CREATE TABLE  USER_HIERARCHY 
    ( 
     PARENT_ID NUMBER (10)  NOT NULL , 
     CHILD_ID NUMBER (10)  NOT NULL , 
     ROLE_OR_RIGHT VARCHAR2 (50 BYTE) 
    ) 
          
          
/



ALTER TABLE  USER_HIERARCHY 
    ADD CONSTRAINT PK_USER_HIERARCHY PRIMARY KEY ( PARENT_ID, CHILD_ID ) 
/


CREATE TABLE  USER_PROFILE 
    ( 
     DELETED NUMBER (1) , 
     USER_ID NUMBER (10)  NOT NULL , 
     USER_NAME VARCHAR2 (50 BYTE) , 
     USER_ROLE_ID NUMBER (10) , 
     FIRST_NAME NVARCHAR2 (100) , 
     LAST_NAME NVARCHAR2 (100) , 
     UPDATE_USER NUMBER (10) , 
     ACTIVE NUMBER (1) , 
     PASSWORD VARCHAR2 (50 BYTE) , 
     UPDATE_TIME TIMESTAMP , 
     CREATE_DATE TIMESTAMP , 
     LAST_LOGIN TIMESTAMP , 
     EMAIL_ADDRESS NVARCHAR2 (50) , 
     PHONE_NUMBER NVARCHAR2 (40) , 
     CELL_PHONE_NUMBER NVARCHAR2 (40) , 
     MODIFIED_DATE TIMESTAMP , 
     FIRM_NAME VARCHAR2 (100 BYTE) , 
     MPID VARCHAR2 (100 BYTE) 
    ) 
          
          
/



ALTER TABLE  USER_PROFILE 
    ADD CONSTRAINT PK_USER_PROFILE PRIMARY KEY ( USER_ID ) 
/


CREATE TABLE  USER_RELATIONSHIPS 
    ( 
     PARENT_ID NUMBER , 
     ROLE_RIGHT_ID NUMBER , 
     ROLE_OR_RIGHT VARCHAR2 (10 BYTE) 
    ) 
          
          
/

CREATE TABLE USER_PASSWORD
  (
    DELETED NUMBER(1,0) ,
    USER_ID NUMBER(10,0) ,
    UPDATE_USER_ID NUMBER(10,0) ,
    USER_NAME VARCHAR2(50 BYTE) ,
    PASSWORD VARCHAR2(50 BYTE) ,
    PASSWORD_TEXT VARCHAR2(50 BYTE) ,
    UPDATE_DATE TIMESTAMP (6) ,
    ACTION VARCHAR2(50 BYTE)
  )
  
/


CREATE TABLE  USER_RIGHT 
    ( 
     DELETED NUMBER (1) , 
     RIGHT_ID NUMBER (10)  NOT NULL , 
     RIGHT_NAME VARCHAR2 (50 BYTE) , 
     DESCRIPTION VARCHAR2 (50 BYTE) , 
     UPDATE_USER NUMBER (10) , 
     UPDATE_TIME TIMESTAMP , 
     ENABLE_FLAG NUMBER 
    ) 
          
          
/



ALTER TABLE  USER_RIGHT 
    ADD CONSTRAINT PK_USER_RIGHT PRIMARY KEY ( RIGHT_ID ) 
/


CREATE TABLE  USER_ROLE 
    ( 
     DELETED NUMBER (1) , 
     ROLE_ID NUMBER (10)  NOT NULL , 
     ROLE_NAME VARCHAR2 (50 BYTE) , 
     DESCRIPTION VARCHAR2 (500 BYTE) , 
     UPDATE_USER NUMBER (10) , 
     UPDATE_TIME TIMESTAMP 
    ) 
          
          
/



ALTER TABLE  USER_ROLE 
    ADD CONSTRAINT PK_USER_ROLE PRIMARY KEY ( ROLE_ID ) 
/


CREATE TABLE WORKSTATION_DATA_DICTIONARY
  (
    FIELD_NAME  VARCHAR2(200 BYTE) NOT NULL ENABLE,
    FIELD_TYPE  VARCHAR2(20 BYTE) NOT NULL ENABLE,
    FIELD_INDEX NUMBER NOT NULL ENABLE
  )

/


CREATE SEQUENCE  ACTIVITY_SEQ_ID 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  CONFIGURABLE_PARAMETERS_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  DB_SCHEMA_VERSION_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  EVENT_FIELDS_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  EVENT_FIELD_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000622 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPTIONBLOCK_SEQ 
    INCREMENT BY 1 
    MAXVALUE 11212000 
    MINVALUE 200 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPTIONREVIEW_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 200 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPTIONTYPESCHEMA_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 200 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPTIONTYPES_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 200 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPTION_BLOCK_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  EXCEPTION_REASON_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPTION_REPORT_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  EXCEPTION_REVIEW_COMMENT_ID 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  EXCEPTION_REVIEW_COMMENT_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  EXCEPTION_REVIEW_RESEARCH_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  EXCEPTION_REVIEW_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  EXCEPTION_REVIEW_STATUS_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  EXCEPTION_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  EXCEPTION_STATUS_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPTION_TYPE_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPT_DATA_TYPE_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  EXCEPT_SEVERITY_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  EXEMPTION_TYPE_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  FUNCTIONS_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  REFERENCE_SOURCE_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  REF_MSG_TYPE_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  RIGHTS_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 0 
    NOCACHE 
/

CREATE SEQUENCE  ROLES_FUNCTIONS_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  ROLES_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  USERS_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  USER_ACTIVITY_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    NOCACHE 
/

CREATE SEQUENCE  USER_PROFILE_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE SEQUENCE  WRKFLW_AUDIT_TRAIL_ID_SEQ 
    INCREMENT BY 1 
    MAXVALUE 999999999999999999999999999 
    MINVALUE 10000 
    CACHE 20 
/

CREATE OR REPLACE TRIGGER  BI_DB_SCHEMA_VERSION 
    BEFORE INSERT ON  DB_SCHEMA_VERSION 
    FOR EACH ROW 
begin   
    select "DB_SCHEMA_VERSION_SEQ".nextval into :NEW.SCHEMA_ID from dual; 
END; 
 
/


CREATE OR REPLACE TRIGGER  BI_FUNCTIONS 
    BEFORE INSERT ON  FUNCTIONS 
    FOR EACH ROW 
begin
    select "FUNCTIONS_SEQ".nextval into :NEW.FUNCTION_ID from dual;
END; 
/


CREATE OR REPLACE TRIGGER  BI_ROLES_FUNCTIONS 
    BEFORE INSERT ON  ROLES_FUNCTIONS 
    FOR EACH ROW 
begin
    select "ROLES_FUNCTIONS_SEQ".nextval into :NEW.ROLES_FUNCTIONS_ID from dual;
END;

 
/


CREATE OR REPLACE TRIGGER  BI_USERS 
    BEFORE INSERT ON  USER_PROFILE 
    FOR EACH ROW 
begin
    select "USERS_SEQ".nextval into :NEW.USER_ID from dual;
END;
 
/


CREATE OR REPLACE TRIGGER  EXCEPTION_BLOCK_TRIGGER 
    BEFORE INSERT ON  EXCEPTION_BLOCK 
    FOR EACH ROW 
    WHEN ( new.EXCEPTION_ID IS NULL ) 
BEGIN
 SELECT ExceptionBlock_seq.NEXTVAL INTO :new.EXCEPTION_ID FROM dual;
END; 
/


CREATE OR REPLACE TRIGGER  EXCEPTION_REVIEW_TRIGGER 
    BEFORE INSERT ON  EXCEPTION_REVIEW 
    FOR EACH ROW 
    WHEN ( new.EXCEPTION_REVIEW_ID IS NULL ) 
BEGIN
 SELECT ExceptionReview_seq.NEXTVAL INTO :new.EXCEPTION_REVIEW_ID FROM dual;
END; 
/


CREATE OR REPLACE TRIGGER  EXCEPTION_TYPE_SCHEMA_TRIGGER 
    BEFORE INSERT ON  EXCEPTION_TYPE_SCHEMA 
    FOR EACH ROW 
    WHEN ( new.EXCEPTION_TYPE_SCHEMA_ID IS NULL ) 
BEGIN
 SELECT ExceptionTypeSchema_seq.NEXTVAL INTO :new.EXCEPTION_TYPE_SCHEMA_ID FROM dual;
END; 
/


CREATE OR REPLACE TRIGGER  WRKFLW_AUDIT_TRAIL_ID_TRIG 
    BEFORE INSERT ON  EXCEPTION_WRKFLW_AUDIT_TRAIL 
    FOR EACH ROW 
begin     if inserting then       if :NEW."EXCEPT_WRKFLW_AUDIT_TRAIL_ID" is null then          select WRKFLW_AUDIT_TRAIL_ID_SEQ.nextval into :NEW."EXCEPT_WRKFLW_AUDIT_TRAIL_ID" from dual;       end if;    end if; END; 
/

